-- MySQL Script generated by MySQL Workbench
-- Fri Oct 20 01:17:43 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Restaurante_Hoteleria
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Restaurante_Hoteleria
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Restaurante_Hoteleria` DEFAULT CHARACTER SET utf8 ;
USE `Restaurante_Hoteleria` ;

-- -----------------------------------------------------
-- Table `Restaurante_Hoteleria`.`Receta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Restaurante_Hoteleria`.`Receta` (
  `idReceta` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `Procedimiento` LONGTEXT NOT NULL,
  `tiempoPreparacion` VARCHAR(12) NOT NULL,
  `numeroPersonas` INT NOT NULL,
  PRIMARY KEY (`idReceta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Restaurante_Hoteleria`.`Platillo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Restaurante_Hoteleria`.`Platillo` (
  `idPlatillo` INT(11) NOT NULL AUTO_INCREMENT,
  `nombrePlatillo` VARCHAR(45) NOT NULL,
  `descripcionPlatillo` VARCHAR(200) NOT NULL,
  `costoPlatillo` FLOAT NOT NULL,
  `receta_idReceta` INT NOT NULL,
  PRIMARY KEY (`idPlatillo`),
  INDEX `FK_idReceta_idx` (`receta_idReceta` ASC),
  CONSTRAINT `FK_idReceta`
    FOREIGN KEY (`receta_idReceta`)
    REFERENCES `Restaurante_Hoteleria`.`Receta` (`idReceta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Restaurante_Hoteleria`.`Mesa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Restaurante_Hoteleria`.`Mesa` (
  `idMesa` INT(11) NOT NULL AUTO_INCREMENT,
  `noMesa` INT(11) NOT NULL,
  `capacidad` INT(11) NOT NULL,
  PRIMARY KEY (`idMesa`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Restaurante_Hoteleria`.`Ingrediente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Restaurante_Hoteleria`.`Ingrediente` (
  `idIngrediente` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(45) NOT NULL,
  `unidadMedida` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idIngrediente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Restaurante_Hoteleria`.`detalleRecetaIngrediente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Restaurante_Hoteleria`.`detalleRecetaIngrediente` (
  `ingrediente_idIngrediente` INT NOT NULL,
  `receta_idReceta` INT NOT NULL,
  `PesoOcantidad` VARCHAR(45) NOT NULL,
  INDEX `FK_idReceta_idx` (`receta_idReceta` ASC),
  INDEX `FK_idIngrediente_idx` (`ingrediente_idIngrediente` ASC),
  PRIMARY KEY (`ingrediente_idIngrediente`, `receta_idReceta`),
  CONSTRAINT `FK_idReceta2`
    FOREIGN KEY (`receta_idReceta`)
    REFERENCES `Restaurante_Hoteleria`.`Receta` (`idReceta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_idIngrediente`
    FOREIGN KEY (`ingrediente_idIngrediente`)
    REFERENCES `Restaurante_Hoteleria`.`Ingrediente` (`idIngrediente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Restaurante_Hoteleria`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Restaurante_Hoteleria`.`Cliente` (
  `idCliente` INT NOT NULL AUTO_INCREMENT,
  `nombreCliente` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idCliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Restaurante_Hoteleria`.`Pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Restaurante_Hoteleria`.`Pedido` (
  `idPedido` INT(11) NOT NULL AUTO_INCREMENT,
  `fechaPedido` VARCHAR(10) NOT NULL,
  `mesa_idMesa` INT(11) NOT NULL,
  `cliente_idCliente` INT(11) NOT NULL,
  PRIMARY KEY (`idPedido`, `mesa_idMesa`, `cliente_idCliente`),
  INDEX `FK_idMesa_idx` (`mesa_idMesa` ASC),
  INDEX `FK_idCliente_idx` (`cliente_idCliente` ASC),
  CONSTRAINT `FK_idMesa`
    FOREIGN KEY (`mesa_idMesa`)
    REFERENCES `Restaurante_Hoteleria`.`Mesa` (`idMesa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_idCliente`
    FOREIGN KEY (`cliente_idCliente`)
    REFERENCES `Restaurante_Hoteleria`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Restaurante_Hoteleria`.`detallepedidoplatillo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Restaurante_Hoteleria`.`detallepedidoplatillo` (
  `cantidadPlatillo` INT(11) NOT NULL,
  `pedido_idPedido` INT(11) NOT NULL,
  `pedido_idPlatillo` INT(11) NOT NULL,
  INDEX `FK_idPedido_idx` (`pedido_idPedido` ASC),
  INDEX `FK_idPlatillo_idx` (`pedido_idPlatillo` ASC),
  PRIMARY KEY (`pedido_idPedido`, `pedido_idPlatillo`),
  CONSTRAINT `FK_idPedido`
    FOREIGN KEY (`pedido_idPedido`)
    REFERENCES `Restaurante_Hoteleria`.`Pedido` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_idPlatillo`
    FOREIGN KEY (`pedido_idPlatillo`)
    REFERENCES `Restaurante_Hoteleria`.`Platillo` (`idPlatillo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Restaurante_Hoteleria`.`Bebida`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Restaurante_Hoteleria`.`Bebida` (
  `idBebida` INT NOT NULL AUTO_INCREMENT,
  `nombreBebida` VARCHAR(45) NOT NULL,
  `descripcionBebida` VARCHAR(150) NULL,
  `costoBebida` FLOAT NOT NULL,
  PRIMARY KEY (`idBebida`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Restaurante_Hoteleria`.`detallepedidobebida`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Restaurante_Hoteleria`.`detallepedidobebida` (
  `cantidadBebida` INT(11) NOT NULL,
  `bebida_idBebida` INT(11) NOT NULL,
  `pedido_idPedido` INT(11) NOT NULL,
  INDEX `FK_idBebida_idx` (`bebida_idBebida` ASC),
  INDEX `FK_idPedido_idx` (`pedido_idPedido` ASC),
  PRIMARY KEY (`bebida_idBebida`, `pedido_idPedido`),
  CONSTRAINT `FK_idBebida`
    FOREIGN KEY (`bebida_idBebida`)
    REFERENCES `Restaurante_Hoteleria`.`Bebida` (`idBebida`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_idPedido2`
    FOREIGN KEY (`pedido_idPedido`)
    REFERENCES `Restaurante_Hoteleria`.`Pedido` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

update detalleRecetaIngrediente set ingrediente_idIngrediente=1, receta_idReceta=1, 
pesoOcantidad='13.2' where ingrediente_idIngrediente=1 and receta_idReceta=1; 
use restaurante_hoteleria;

select P.idPedido as No, P.fechaPedido as Fecha, M.noMesa as Mesa, C.idCliente as Cliente, Pl.nombrePlatillo as Platillo, DPP.cantidadPlatillo as Cantidad_Platillo, B.nombreBebida as Bebida, DPB.cantidadBebida as Cantidad_Bebida from pedido P inner join detallepedidoplatillo DPP on P.idPedido=DPP.pedido_idPedido 
inner join detallepedidobebida DPB on P.idPedido=DPB.pedido_idPedido inner join mesa M on P.mesa_idMesa=M.idMesa inner join Cliente C on P.cliente_idCliente=C.idCliente inner join Bebida B on B.idBebida=DPB.bebida_idBebida inner join platillo PL on PL.idPlatillo=DPP.pedido_idPedido;

select max(idPedido) from pedido;
insert into cliente (nombreCliente) values ('Cindy Gaitan');
insert into pedido (fechaPedido, mesa_idMesa, cliente_idCliente) values ('27/05/2017', 1, 1);
select *from pedido;

select idPedido from pedido where idPedido=max(idPedido);
select * from detallepedidobebida;
select * from detallepedidoplatillo;


